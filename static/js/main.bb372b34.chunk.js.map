{"version":3,"sources":["assets/gongSound.mp3","utils.js","Timer.js","App.js","index.js"],"names":["module","exports","padTime","time","toString","padStart","Timer","useState","title","setTitle","duration","timeLeft","setTimeLeft","isRunning","setIsRunning","isComplete","setIsComplete","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","src","soundfile","autoPlay","onClick","setInterval","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,uC,8JCApC,SAASC,EAAQC,GACpB,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KCGxB,SAASC,IACpB,IAD4B,EAEFC,mBAAS,mBAFP,mBAErBC,EAFqB,KAEdC,EAFc,OAGIF,mBAASG,MAHb,mBAGrBC,EAHqB,KAGXC,EAHW,OAIML,oBAAS,GAJf,mBAIrBM,EAJqB,KAIVC,EAJU,OAKQP,oBAAS,GALjB,mBAKrBQ,EALqB,KAKTC,EALS,KAMtBC,EAAcC,iBAAO,MA+B3B,SAASC,IACLC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBZ,EAAS,8BACTG,EAAYF,MACZI,GAAa,GAGjB,IAAMQ,EAAUpB,EAAQqB,KAAKC,MAAMb,EAAW,KACxCc,EAAUvB,EAAQS,EAAqB,GAAVW,GAEnC,OACI,oCACI,4BAAKd,GACL,yBAAKkB,UAAU,SACX,8BAAOJ,GACP,mCACA,8BAAOG,IAGPV,GAAc,2BAAOY,IAAKC,IAAWC,UAAQ,IAEjD,yBAAKH,UAAU,YACTb,GACE,4BAAQiB,QArDxB,WAEgC,OAAxBb,EAAYI,UAChBZ,EAAS,kBACTK,GAAa,GACbE,GAAc,GACdC,EAAYI,QAAUU,aAAY,WAC9BnB,GAAY,SAAAD,GAER,OAAIA,GAAY,EAAUA,EAAW,GAErCK,GAAc,GAEdG,IACO,QAEZ,QAsCa,uCACA,uBAAGO,UAAU,aAAaM,cAAY,UAI1CnB,GACA,4BAAQiB,QAzCxB,WAEgC,OAAxBb,EAAYI,UAChBZ,EAAS,eACTW,cAAcH,EAAYI,SAE1BJ,EAAYI,QAAU,KACtBP,GAAa,MAmCG,sCACA,uBAAGY,UAAU,aAAaM,cAAY,UAG9C,4BAAQF,QAASX,GACb,uCACA,uBAAGO,UAAU,aAAaM,cAAY,YC3E3C,SAASC,IACtB,OACE,yBAAKP,UAAU,OACb,kBAACpB,EAAD,OCHN4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bb372b34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gongSound.16e6a7d8.mp3\";","export function padTime(time) {\r\n    return time.toString().padStart(2, '0');\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport soundfile from './assets/gongSound.mp3';\r\nimport { padTime } from './utils';\r\n\r\nexport default function Timer() {\r\n    const duration = 25;\r\n    const [title, setTitle] = useState('Ready, set, go!');\r\n    const [timeLeft, setTimeLeft] = useState(duration * 60);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    function startTimer() {\r\n        // it means we already have a timer started\r\n        if (intervalRef.current !== null) return;\r\n        setTitle('You can do it!');\r\n        setIsRunning(true);\r\n        setIsComplete(false);\r\n        intervalRef.current = setInterval(() => {\r\n            setTimeLeft(timeLeft => {\r\n                // stop the counter from getting below 0\r\n                if (timeLeft >= 1) return timeLeft - 1;\r\n\r\n                setIsComplete(true);\r\n                // reset the timer when the countdown is finished\r\n                resetTimer();\r\n                return 0;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    function stopTimer() {\r\n        // there is no timer started\r\n        if (intervalRef.current === null) return;\r\n        setTitle('Keep it up!');\r\n        clearInterval(intervalRef.current);\r\n        // without null, the startTimer won't start again\r\n        intervalRef.current = null;\r\n        setIsRunning(false);\r\n    };\r\n\r\n    function resetTimer() {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n        setTitle('Ready to go another round?');\r\n        setTimeLeft(duration * 60);\r\n        setIsRunning(false);\r\n    };\r\n\r\n    const minutes = padTime(Math.floor(timeLeft / 60));\r\n    const seconds = padTime(timeLeft - minutes * 60);\r\n\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            <div className=\"timer\">\r\n                <span>{minutes}</span>\r\n                <span>:</span>\r\n                <span>{seconds}</span>\r\n            </div>\r\n            {\r\n                isComplete && <audio src={soundfile} autoPlay />\r\n            }\r\n            <div className=\"buttons\">\r\n                {!isRunning &&\r\n                    <button onClick={startTimer}>\r\n                        <span>Start</span>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                }\r\n                {\r\n                    isRunning &&\r\n                    <button onClick={stopTimer}>\r\n                        <span>Stop</span>\r\n                        <i className=\"fa fa-stop\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                }\r\n                <button onClick={resetTimer}>\r\n                    <span>Reset</span>\r\n                    <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Timer from './Timer';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Timer />\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}